{"ast":null,"code":"import{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function StudentDashboard(){const[assignments,setAssignments]=useState([]);const[selectedFile,setSelectedFile]=useState(null);const studentId=\"STUDENT_ID\";// Replace with actual logged-in student's ID\nuseEffect(()=>{fetch(\"http://localhost:5000/api/assignments/student/CLASS_NAME\").then(res=>res.json()).then(data=>setAssignments(data));},[]);const handleSubmit=async assignmentId=>{if(!selectedFile)return alert(\"Please select a file\");const formData=new FormData();formData.append(\"file\",selectedFile);const response=await fetch(\"http://localhost:5000/api/assignments/submit\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({studentId,assignmentId,fileUrl:\"uploaded-file-url\"})});if(response.ok)alert(\"Assignment Submitted!\");};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Student Dashboard\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Active Assignments\"}),assignments.map(assignment=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:assignment.title}),/*#__PURE__*/_jsx(\"p\",{children:assignment.description}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Due: \",new Date(assignment.dueDate).toLocaleDateString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Teacher: \",assignment.teacherId.name]}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:e=>setSelectedFile(e.target.files[0])}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSubmit(assignment._id),children:\"Submit\"})]},assignment._id))]});}export default StudentDashboard;","map":{"version":3,"names":["useState","useEffect","jsx","_jsx","jsxs","_jsxs","StudentDashboard","assignments","setAssignments","selectedFile","setSelectedFile","studentId","fetch","then","res","json","data","handleSubmit","assignmentId","alert","formData","FormData","append","response","method","headers","body","JSON","stringify","fileUrl","ok","children","map","assignment","title","description","Date","dueDate","toLocaleDateString","teacherId","name","type","onChange","e","target","files","onClick","_id"],"sources":["C:/Users/neeraj/Desktop/_/SE/SE_project/frontend/src/components/StudentDashboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction StudentDashboard() {\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const studentId = \"STUDENT_ID\"; // Replace with actual logged-in student's ID\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:5000/api/assignments/student/CLASS_NAME\")\r\n      .then((res) => res.json())\r\n      .then((data) => setAssignments(data));\r\n  }, []);\r\n\r\n  const handleSubmit = async (assignmentId) => {\r\n    if (!selectedFile) return alert(\"Please select a file\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    const response = await fetch(\"http://localhost:5000/api/assignments/submit\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ studentId, assignmentId, fileUrl: \"uploaded-file-url\" }),\r\n    });\r\n\r\n    if (response.ok) alert(\"Assignment Submitted!\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Student Dashboard</h1>\r\n      <h2>Active Assignments</h2>\r\n      {assignments.map((assignment) => (\r\n        <div key={assignment._id}>\r\n          <h3>{assignment.title}</h3>\r\n          <p>{assignment.description}</p>\r\n          <p>Due: {new Date(assignment.dueDate).toLocaleDateString()}</p>\r\n          <p>Teacher: {assignment.teacherId.name}</p>\r\n          <input type=\"file\" onChange={(e) => setSelectedFile(e.target.files[0])} />\r\n          <button onClick={() => handleSubmit(assignment._id)}>Submit</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StudentDashboard;\r\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,QAAS,CAAAC,gBAAgBA,CAAA,CAAG,CAC1B,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACS,YAAY,CAAEC,eAAe,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAAAW,SAAS,CAAG,YAAY,CAAE;AAEhCV,SAAS,CAAC,IAAM,CACdW,KAAK,CAAC,0DAA0D,CAAC,CAC9DC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKR,cAAc,CAACQ,IAAI,CAAC,CAAC,CACzC,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAC,YAAY,EAAK,CAC3C,GAAI,CAACT,YAAY,CAAE,MAAO,CAAAU,KAAK,CAAC,sBAAsB,CAAC,CAEvD,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEb,YAAY,CAAC,CAErC,KAAM,CAAAc,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAAC,8CAA8C,CAAE,CAC3EY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEjB,SAAS,CAAEO,YAAY,CAAEW,OAAO,CAAE,mBAAoB,CAAC,CAChF,CAAC,CAAC,CAEF,GAAIN,QAAQ,CAACO,EAAE,CAAEX,KAAK,CAAC,uBAAuB,CAAC,CACjD,CAAC,CAED,mBACEd,KAAA,QAAA0B,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAI,mBAAiB,CAAI,CAAC,cAC1B5B,IAAA,OAAA4B,QAAA,CAAI,oBAAkB,CAAI,CAAC,CAC1BxB,WAAW,CAACyB,GAAG,CAAEC,UAAU,eAC1B5B,KAAA,QAAA0B,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAKE,UAAU,CAACC,KAAK,CAAK,CAAC,cAC3B/B,IAAA,MAAA4B,QAAA,CAAIE,UAAU,CAACE,WAAW,CAAI,CAAC,cAC/B9B,KAAA,MAAA0B,QAAA,EAAG,OAAK,CAAC,GAAI,CAAAK,IAAI,CAACH,UAAU,CAACI,OAAO,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAI,CAAC,cAC/DjC,KAAA,MAAA0B,QAAA,EAAG,WAAS,CAACE,UAAU,CAACM,SAAS,CAACC,IAAI,EAAI,CAAC,cAC3CrC,IAAA,UAAOsC,IAAI,CAAC,MAAM,CAACC,QAAQ,CAAGC,CAAC,EAAKjC,eAAe,CAACiC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE,CAAE,CAAC,cAC1E1C,IAAA,WAAQ2C,OAAO,CAAEA,CAAA,GAAM7B,YAAY,CAACgB,UAAU,CAACc,GAAG,CAAE,CAAAhB,QAAA,CAAC,QAAM,CAAQ,CAAC,GAN5DE,UAAU,CAACc,GAOhB,CACN,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAzC,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}